{
  "resolvedId": "/home/a/serious_game/albers/app.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { ref, provide, readonly } from 'vue'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'app',\n  setup(__props) {\n\nconst magSecret = useCookie('secret')\nmagSecret.value = 'community'\n\nconst network = ref(localStorage.getItem('network') || 'MAINNET')\n\nconst toggleNetwork = () => {\n  console.log('toggling network')\n  network.value = network.value === 'TESTNET' ? 'MAINNET' : 'TESTNET'\n  localStorage.setItem('network', network.value)\n}\n\nconst shuffle = (list) => {\n  return list\n    .map(x => [Math.random(), x])\n    .sort(([a], [b]) => a - b)\n    .map(([_, x]) => x)\n}\n\nconst colors = ref([\n  \"rgb(255, 26, 139)\",\n  \"rgb(25, 255, 131)\",\n  \"rgb(255, 103, 26)\",\n  \"rgb(26, 164, 255)\",\n  \"rgb(250, 255, 26)\"\n])\n\nconst updateColors = (newColors) => {\n  if (newColors.length >= 5) {\n    colors.value = shuffle(newColors).slice(0, 5);\n  } else {\n    let filledArray = [];\n    while (filledArray.length < 5) {\n      filledArray = filledArray.concat(newColors);\n    }\n    colors.value = filledArray.slice(0, 5);\n  }\n}\n\n// think of these as global variables\nprovide('magSecret', magSecret)\n\nprovide('network', network)\nprovide('toggleNetwork', toggleNetwork)\n\nprovide('defaultColors', colors)\nprovide('updateColors', updateColors)\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_NuxtPage = _resolveComponent(\"NuxtPage\")!\n  const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\")!\n  const _component_UModals = _resolveComponent(\"UModals\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NuxtLayout, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_NuxtPage)\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_UModals)\n  ], 64))\n}\n}\n\n})",
      "start": 1720085725709,
      "end": 1720085725710
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1720085725710,
      "end": 1720085725710,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1720085725710,
      "end": 1720085725710,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1720085725710,
      "end": 1720085725710,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1720085725710,
      "end": 1720085725710,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { ref, provide } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"app\",\n  setup(__props) {\n    const magSecret = useCookie(\"secret\");\n    magSecret.value = \"community\";\n    const network = ref(localStorage.getItem(\"network\") || \"MAINNET\");\n    const toggleNetwork = () => {\n      console.log(\"toggling network\");\n      network.value = network.value === \"TESTNET\" ? \"MAINNET\" : \"TESTNET\";\n      localStorage.setItem(\"network\", network.value);\n    };\n    const shuffle = (list) => {\n      return list.map((x) => [Math.random(), x]).sort(([a], [b]) => a - b).map(([_, x]) => x);\n    };\n    const colors = ref([\n      \"rgb(255, 26, 139)\",\n      \"rgb(25, 255, 131)\",\n      \"rgb(255, 103, 26)\",\n      \"rgb(26, 164, 255)\",\n      \"rgb(250, 255, 26)\"\n    ]);\n    const updateColors = (newColors) => {\n      if (newColors.length >= 5) {\n        colors.value = shuffle(newColors).slice(0, 5);\n      } else {\n        let filledArray = [];\n        while (filledArray.length < 5) {\n          filledArray = filledArray.concat(newColors);\n        }\n        colors.value = filledArray.slice(0, 5);\n      }\n    };\n    provide(\"magSecret\", magSecret);\n    provide(\"network\", network);\n    provide(\"toggleNetwork\", toggleNetwork);\n    provide(\"defaultColors\", colors);\n    provide(\"updateColors\", updateColors);\n    return (_ctx, _cache) => {\n      const _component_NuxtPage = _resolveComponent(\"NuxtPage\");\n      const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\");\n      const _component_UModals = _resolveComponent(\"UModals\");\n      return _openBlock(), _createElementBlock(_Fragment, null, [\n        _createVNode(_component_NuxtLayout, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_NuxtPage)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_UModals)\n      ], 64);\n    };\n  }\n});\n",
      "start": 1720085725710,
      "end": 1720085726127,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/a/serious_game/albers/app.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { ref, provide, readonly } from 'vue'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'app',\n  setup(__props) {\n\nconst magSecret = useCookie('secret')\nmagSecret.value = 'community'\n\nconst network = ref(localStorage.getItem('network') || 'MAINNET')\n\nconst toggleNetwork = () => {\n  console.log('toggling network')\n  network.value = network.value === 'TESTNET' ? 'MAINNET' : 'TESTNET'\n  localStorage.setItem('network', network.value)\n}\n\nconst shuffle = (list) => {\n  return list\n    .map(x => [Math.random(), x])\n    .sort(([a], [b]) => a - b)\n    .map(([_, x]) => x)\n}\n\nconst colors = ref([\n  \"rgb(255, 26, 139)\",\n  \"rgb(25, 255, 131)\",\n  \"rgb(255, 103, 26)\",\n  \"rgb(26, 164, 255)\",\n  \"rgb(250, 255, 26)\"\n])\n\nconst updateColors = (newColors) => {\n  if (newColors.length >= 5) {\n    colors.value = shuffle(newColors).slice(0, 5);\n  } else {\n    let filledArray = [];\n    while (filledArray.length < 5) {\n      filledArray = filledArray.concat(newColors);\n    }\n    colors.value = filledArray.slice(0, 5);\n  }\n}\n\n// think of these as global variables\nprovide('magSecret', magSecret)\n\nprovide('network', network)\nprovide('toggleNetwork', toggleNetwork)\n\nprovide('defaultColors', colors)\nprovide('updateColors', updateColors)\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_NuxtPage = _resolveComponent(\"NuxtPage\")!\n  const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\")!\n  const _component_UModals = _resolveComponent(\"UModals\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_NuxtLayout, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_NuxtPage)\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_UModals)\n  ], 64))\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,oBAAoB,mBAAmB,eAAe,cAAc,WAAW,UAAU,YAAY,WAAW,aAAa,YAAY,sBAAsB,2BAA2B;AAEnM,SAAS,KAAK,eAAyB;AAGvC,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,MAAM,SAAS;AAEjB,UAAM,YAAY,UAAU,QAAQ;AACpC,cAAU,QAAQ;AAElB,UAAM,UAAU,IAAI,aAAa,QAAQ,SAAS,KAAK,SAAS;AAEhE,UAAM,gBAAgB,MAAM;AAC1B,cAAQ,IAAI,kBAAkB;AAC9B,cAAQ,QAAQ,QAAQ,UAAU,YAAY,YAAY;AAC1D,mBAAa,QAAQ,WAAW,QAAQ,KAAK;AAAA,IAC/C;AAEA,UAAM,UAAU,CAAC,SAAS;AACxB,aAAO,KACJ,IAAI,OAAK,CAAC,KAAK,OAAO,GAAG,CAAC,CAAC,EAC3B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,EACxB,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AAAA,IACtB;AAEA,UAAM,SAAS,IAAI;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,UAAM,eAAe,CAAC,cAAc;AAClC,UAAI,UAAU,UAAU,GAAG;AACzB,eAAO,QAAQ,QAAQ,SAAS,EAAE,MAAM,GAAG,CAAC;AAAA,MAC9C,OAAO;AACL,YAAI,cAAc,CAAC;AACnB,eAAO,YAAY,SAAS,GAAG;AAC7B,wBAAc,YAAY,OAAO,SAAS;AAAA,QAC5C;AACA,eAAO,QAAQ,YAAY,MAAM,GAAG,CAAC;AAAA,MACvC;AAAA,IACF;AAGA,YAAQ,aAAa,SAAS;AAE9B,YAAQ,WAAW,OAAO;AAC1B,YAAQ,iBAAiB,aAAa;AAEtC,YAAQ,iBAAiB,MAAM;AAC/B,YAAQ,gBAAgB,YAAY;AAEpC,WAAO,CAAC,MAAU,WAAgB;AAChC,YAAM,sBAAsB,kBAAkB,UAAU;AACxD,YAAM,wBAAwB,kBAAkB,YAAY;AAC5D,YAAM,qBAAqB,kBAAkB,SAAS;AAEtD,aAAQ,WAAW,GAAG,oBAAoB,WAAW,MAAM;AAAA,QACzD,aAAa,uBAAuB,MAAM;AAAA,UACxC,SAAS,SAAS,MAAM;AAAA,YACtB,aAAa,mBAAmB;AAAA,UAClC,CAAC;AAAA,UACD,GAAG;AAAA,QACL,CAAC;AAAA,QACD,aAAa,kBAAkB;AAAA,MACjC,GAAG,EAAE;AAAA,IACP;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1720085726127,
      "end": 1720085726127,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720085726127,
      "end": 1720085726127,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1720085726127,
      "end": 1720085726128,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1720085726128,
      "end": 1720085726128,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720085726128,
      "end": 1720085726128,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1720085726128,
      "end": 1720085726128,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1720085726128,
      "end": 1720085726128,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1720085726130,
      "end": 1720085726131,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1720085726132,
      "end": 1720085726133,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1720085726134,
      "end": 1720085726134,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720085726134,
      "end": 1720085726135,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720085726135,
      "end": 1720085726135,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1720085726135,
      "end": 1720085726135,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720085726135,
      "end": 1720085726135,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720085726135,
      "end": 1720085726135,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1720085726135,
      "end": 1720085726135,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720085726135,
      "end": 1720085726135,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720085726135,
      "end": 1720085726135,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1720085726135,
      "end": 1720085726135,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useCookie } from '#app/composables/cookie';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { ref, provide } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"app\",\n  setup(__props) {\n    const magSecret = useCookie(\"secret\");\n    magSecret.value = \"community\";\n    const network = ref(localStorage.getItem(\"network\") || \"MAINNET\");\n    const toggleNetwork = () => {\n      console.log(\"toggling network\");\n      network.value = network.value === \"TESTNET\" ? \"MAINNET\" : \"TESTNET\";\n      localStorage.setItem(\"network\", network.value);\n    };\n    const shuffle = (list) => {\n      return list.map((x) => [Math.random(), x]).sort(([a], [b]) => a - b).map(([_, x]) => x);\n    };\n    const colors = ref([\n      \"rgb(255, 26, 139)\",\n      \"rgb(25, 255, 131)\",\n      \"rgb(255, 103, 26)\",\n      \"rgb(26, 164, 255)\",\n      \"rgb(250, 255, 26)\"\n    ]);\n    const updateColors = (newColors) => {\n      if (newColors.length >= 5) {\n        colors.value = shuffle(newColors).slice(0, 5);\n      } else {\n        let filledArray = [];\n        while (filledArray.length < 5) {\n          filledArray = filledArray.concat(newColors);\n        }\n        colors.value = filledArray.slice(0, 5);\n      }\n    };\n    provide(\"magSecret\", magSecret);\n    provide(\"network\", network);\n    provide(\"toggleNetwork\", toggleNetwork);\n    provide(\"defaultColors\", colors);\n    provide(\"updateColors\", updateColors);\n    return (_ctx, _cache) => {\n      const _component_NuxtPage = _resolveComponent(\"NuxtPage\");\n      const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\");\n      const _component_UModals = _resolveComponent(\"UModals\");\n      return _openBlock(), _createElementBlock(_Fragment, null, [\n        _createVNode(_component_NuxtLayout, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_NuxtPage)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_UModals)\n      ], 64);\n    };\n  }\n});\n",
      "start": 1720085726135,
      "end": 1720085726143,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtrxzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrhE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1720085726146,
      "end": 1720085726148,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1720085726149,
      "end": 1720085726149,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1720085726149,
      "end": 1720085726149,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1720085726149,
      "end": 1720085726149,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/home/a/serious_game/albers/node_modules/nuxt/dist/pages/runtime/page\";\nimport { default as __nuxt_component_1 } from \"/home/a/serious_game/albers/node_modules/nuxt/dist/app/components/nuxt-layout\";\nimport { createClientOnly } from \"#app/components/client-only\";\nimport { default as __nuxt_component_2_client } from \"/home/a/serious_game/albers/node_modules/@nuxt/ui/dist/runtime/components/overlays/Modals.client.vue\";\nconst __nuxt_component_2_client_wrapped = createClientOnly(__nuxt_component_2_client)\nimport { useCookie } from '#app/composables/cookie';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { ref, provide } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"app\",\n  setup(__props) {\n    const magSecret = useCookie(\"secret\");\n    magSecret.value = \"community\";\n    const network = ref(localStorage.getItem(\"network\") || \"MAINNET\");\n    const toggleNetwork = () => {\n      console.log(\"toggling network\");\n      network.value = network.value === \"TESTNET\" ? \"MAINNET\" : \"TESTNET\";\n      localStorage.setItem(\"network\", network.value);\n    };\n    const shuffle = (list) => {\n      return list.map((x) => [Math.random(), x]).sort(([a], [b]) => a - b).map(([_, x]) => x);\n    };\n    const colors = ref([\n      \"rgb(255, 26, 139)\",\n      \"rgb(25, 255, 131)\",\n      \"rgb(255, 103, 26)\",\n      \"rgb(26, 164, 255)\",\n      \"rgb(250, 255, 26)\"\n    ]);\n    const updateColors = (newColors) => {\n      if (newColors.length >= 5) {\n        colors.value = shuffle(newColors).slice(0, 5);\n      } else {\n        let filledArray = [];\n        while (filledArray.length < 5) {\n          filledArray = filledArray.concat(newColors);\n        }\n        colors.value = filledArray.slice(0, 5);\n      }\n    };\n    provide(\"magSecret\", magSecret);\n    provide(\"network\", network);\n    provide(\"toggleNetwork\", toggleNetwork);\n    provide(\"defaultColors\", colors);\n    provide(\"updateColors\", updateColors);\n    return (_ctx, _cache) => {\n      const _component_NuxtPage = __nuxt_component_0;\n      const _component_NuxtLayout = __nuxt_component_1;\n      const _component_UModals = __nuxt_component_2_client_wrapped;\n      return _openBlock(), _createElementBlock(_Fragment, null, [\n        _createVNode(_component_NuxtLayout, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_NuxtPage)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_UModals)\n      ], 64);\n    };\n  }\n});\n",
      "start": 1720085726150,
      "end": 1720085726150,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1720085726151,
      "end": 1720085726151,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1720085726152,
      "end": 1720085726152,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1720085726152,
      "end": 1720085726153,
      "order": "normal"
    }
  ]
}
